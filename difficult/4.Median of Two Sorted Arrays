PROBLEMS

Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).

Example 1:
Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.
**************************************************************************************************************************************************************************
SOLUTION(BEST) Merge two sorted sequences into one

double findMedianSortedArrays(int* nums1, int nums1Size, int* nums2, int nums2Size){
    double ret;
    int *nums;
    int numsize=nums1Size+nums2Size;
    nums=(int*)malloc(sizeof(int)*numsize);
    int i,j,k;
    for(i=0,j=0,k=0;i<nums1Size&&j<nums2Size;k++)
    {
        if(nums1[i]<=nums2[j])
        {
            nums[k]=nums1[i];
            i++;
        }
        else
        {
            nums[k]=nums2[j];
            j++;
        }
    }
    for(;i<nums1Size;i++,k++)
    {
        nums[k]=nums1[i];
    }
    for(;j<nums2Size;j++,k++)
    {
        nums[k]=nums2[j];
    }
    if(numsize%2==0)
    {
        ret=((double)nums[numsize/2]+(double)nums[(numsize/2)-1])/2;
    }
    else
    {
        ret=nums[(numsize-1)/2];
    }
    return ret;
}
********************************************************************************************************************************************************************
ATTENTION ！！
It is impossible to get a double number x by doing x=(a+b)/2 while both a and b are ints,so we need to do x=((double)a+(double)b)/2 !!!!!!!!!
